//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.NEWCC;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Speaker.CLASS_NAME, typeof(Speaker))]

namespace CMS.DocumentEngine.Types.NEWCC
{
    /// <summary>
    /// Represents a content item of type Speaker.
    /// </summary>
    public partial class Speaker : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "NEWCC.Speaker";


        /// <summary>
        /// The instance of the class that provides extended API for working with Speaker fields.
        /// </summary>
        private readonly SpeakerFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// SpeakerID.
        /// </summary>
        [DatabaseIDField]
        public int SpeakerID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("SpeakerID"), 0);
            }
            set
            {
                SetValue("SpeakerID", value);
            }
        }


        /// <summary>
        /// Speaker Name.
        /// </summary>
        [DatabaseField]
        public string SpeakerName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("SpeakerName"), @"");
            }
            set
            {
                SetValue("SpeakerName", value);
            }
        }


        /// <summary>
        /// Topic.
        /// </summary>
        [DatabaseField]
        public string Topic
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Topic"), @"");
            }
            set
            {
                SetValue("Topic", value);
            }
        }


        /// <summary>
        /// Company.
        /// </summary>
        [DatabaseField]
        public string Company
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Company"), @"");
            }
            set
            {
                SetValue("Company", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Speaker fields.
        /// </summary>
        [RegisterProperty]
        public SpeakerFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Speaker fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class SpeakerFields : AbstractHierarchicalObject<SpeakerFields>
        {
            /// <summary>
            /// The content item of type Speaker that is a target of the extended API.
            /// </summary>
            private readonly Speaker mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="SpeakerFields" /> class with the specified content item of type Speaker.
            /// </summary>
            /// <param name="instance">The content item of type Speaker that is a target of the extended API.</param>
            public SpeakerFields(Speaker instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// SpeakerID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.SpeakerID;
                }
                set
                {
                    mInstance.SpeakerID = value;
                }
            }


            /// <summary>
            /// Speaker Name.
            /// </summary>
            public string Name
            {
                get
                {
                    return mInstance.SpeakerName;
                }
                set
                {
                    mInstance.SpeakerName = value;
                }
            }


            /// <summary>
            /// Topic.
            /// </summary>
            public string Topic
            {
                get
                {
                    return mInstance.Topic;
                }
                set
                {
                    mInstance.Topic = value;
                }
            }


            /// <summary>
            /// Company.
            /// </summary>
            public string Company
            {
                get
                {
                    return mInstance.Company;
                }
                set
                {
                    mInstance.Company = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Speaker" /> class.
        /// </summary>
        public Speaker() : base(CLASS_NAME)
        {
            mFields = new SpeakerFields(this);
        }

        #endregion
    }
}